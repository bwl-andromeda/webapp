name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Сборка и публикация Docker-образа
    runs-on: ubuntu-22.04

    env:
      IMAGE_NAME: ghcr.io/${{ github.actor }}/webapp
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Авторизация в GitHub Container Registry
        run: |
          echo ${{ secrets.PAT }} \
            | docker login ghcr.io \
                -u ${{ github.actor }} \
                --password-stdin

      - name: Сборка и публикация образа
        run: |
          docker build . \
            -f Dockerfile \
            -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            -t ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Развёртывание через SSH и Docker Compose
    runs-on: ubuntu-22.04
    needs: build-and-push

    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Установка SSH-ключей
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Генерация конфигурации Docker Compose
        env:
          POSTGRES_USER:     ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB:       ${{ secrets.POSTGRES_DB }}
        run: |
          envsubst < docker-compose.yml > docker-compose-secret.yml

      - name: Копирование Compose-файла на сервер
        run: |
          scp docker-compose-secret.yml \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/docker-compose.yml

      - name: Применение обновлений на сервере
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<'EOF'
            docker compose down
            docker compose pull
            docker compose up -d
            rm ~/docker-compose.yml
          EOF

      - name: Локальная очистка
        if: always()
        run: |
          rm -rf docker-compose.yml docker-compose-secret.yml
